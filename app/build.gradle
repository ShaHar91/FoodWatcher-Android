plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
}

// define build version
def versionMajor = 1
def versionMinor = 0
def versionPatch = 2
def versionBuild = 0

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // generate versionCode and versionName from defined major, minor, versionPatch, versionBuild
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"

        setProperty("archivesBaseName", applicationId + "-v" + versionCode + "(" + versionName + ")")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    flavorDimensions "whiteLabel", "skin", "dataSource", "env"
    android.variantFilter { variant ->
//        def whiteLabel = variant.getFlavors.get(0).name
        def skin = variant.getFlavors().get(1).name
//        def dataSource = variant.getFlavors().get(2).name
//        def env = variant.getFlavors.get(3).name

        // only show variants with the 'default' skin
        if (skin == "_skinDefault") {
            variant.setIgnore(false)
            return
        }

        variant.setIgnore(true)
    }

    productFlavors {
        foodWatcher {
            dimension 'whiteLabel'
            applicationId "com.shahar91.foodwatcher"
        }

        dev {
            dimension 'env'
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
        }

        staging {
            dimension 'env'
            applicationIdSuffix '.staging'
            versionNameSuffix '-staging'
        }

        prod {
            dimension 'env'
        }

        _skinDefault {
            dimension "skin"
        }

        _skinRed {
            dimension "skin"
        }

        _local {
            dimension "dataSource"
            applicationIdSuffix '.local'
        }

        _firebase {
            dimension "dataSource"
            applicationIdSuffix '.fire'
        }
    }
}

dependencies {
    implementation 'com.github.appwise-labs.AndroidCore:core:bd3206b8b2'
    implementation 'com.github.appwise-labs.AndroidCore:room:bd3206b8b2'
    implementation 'com.github.appwise-labs.AndroidCore:networking:bd3206b8b2'
    implementation 'com.github.appwise-labs.AndroidCore:emptyRecyclerView:bd3206b8b2'

    implementation fileTree(dir: "libs", include: ["*.jar"])

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    kapt "com.android.databinding:compiler:4.0.0"

    kapt "androidx.room:room-compiler:2.3.0"

    implementation 'com.github.kizitonwose:CalendarView:1.0.2'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // https://github.com/reddit/IndicatorFastScroll
    implementation 'com.reddit:indicator-fast-scroll:1.4.0'

    // Koin main features for Android (Scope,ViewModel ...)
    implementation "io.insert-koin:koin-android:$koin_version"

    _firebaseImplementation platform('com.google.firebase:firebase-bom:29.0.0')
    _firebaseImplementation "com.google.firebase:firebase-firestore-ktx"
}